! function() {
    "use strict";

    function e(e) {
        return function(e) {
            if (Array.isArray(e)) return t(e)
        }(e) || function(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
        }(e) || function(e, o) {
            if (!e) return;
            if ("string" == typeof e) return t(e, o);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            "Object" === n && e.constructor && (n = e.constructor.name);
            if ("Map" === n || "Set" === n) return Array.from(e);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return t(e, o)
        }(e) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function t(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var o = 0, n = new Array(t); o < t; o++) n[o] = e[o];
        return n
    }

    function o() {
        window.scroll({
            top: 0,
            behavior: "smooth"
        })
    }

    function n() {
        var t, o, n, r = document.querySelector(".experience-section .experience__timePath"),
            i = gsap.utils.toArray(".experience-section .experience__timeline__item");
        if ((r || i.length) && (! function(t, o) {
                var n = e(Array(Math.floor((o.length - 1) / 3)));
                t.insertAdjacentHTML("afterbegin", '<span class="line"></span>'), n.forEach((function() {
                    t.insertAdjacentHTML("beforeend", '<span class="semicircle"></span><span class="line"></span>')
                }))
            }(r, i), n = gsap.timeline({
                scrollTrigger: {
                    trigger: ".experience-section .experience__timeline",
                    start: "top 85%",
                    end: "top 35%",
                    scrub: .3
                }
            })), r) {
            var a = gsap.utils.toArray(".experience-section .experience__timePath span");
            t = gsap.timeline();
            var s = document.documentElement.dir,
                l = "rtl" === s ? "reverse" : "from",
                c = "rtl" === s ? "from" : "reverse",
                u = {
                    x: {
                        from: "polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%)",
                        reverse: "polygon(100% 0%, 100% 0%, 100% 100%, 100% 100%)",
                        to: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)"
                    },
                    c: {
                        from: "polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 75%, 0% 75%, 0% 75%, 0% 75%)",
                        reverse: "polygon(100% 0%, 100% 0%, 100% 0%, 100% 0%, 100% 75%, 100% 75%, 100% 75%, 100% 75%)",
                        to: {
                            from: {
                                st1: "polygon(0% 0%, 100% 0%, 100% 0%, 100% 0%, 100% 0%, 75% 25%, 75% 25%, 0% 25%)",
                                st2: "polygon(0% 0%, 100% 0%, 100% 100%, 100% 100%, 75% 75%, 75% 75%, 75% 25%, 0% 25%)",
                                st3: "polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%, 0% 75%, 75% 75%, 75% 25%, 0% 25%)"
                            },
                            reverse: {
                                st1: "polygon(100% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%, 25% 25%, 25% 25%, 100% 25%)",
                                st2: "polygon(100% 0%, 0% 0%, 0% 100%, 0% 100%, 25% 75%, 25% 75%, 25% 25%, 100% 25%)",
                                st3: "polygon(100% 0%, 0% 0%, 0% 100%, 100% 100%, 100% 75%, 25% 75%, 25% 25%, 100% 25%)"
                            }
                        }
                    }
                },
                d = e(r.querySelectorAll(".line:nth-of-type(4n + 1)")),
                m = e(r.querySelectorAll(".line:nth-of-type(4n + 3)")),
                f = e(r.querySelectorAll(".semicircle:nth-of-type(4n + 2)")),
                p = e(r.querySelectorAll(".semicircle:nth-of-type(4n + 4)"));
            t.set(a, {
                autoAlpha: 1
            }).set(d, {
                clipPath: u.x[l]
            }).set(m, {
                clipPath: u.x[c]
            }).set(f, {
                clipPath: u.c[l]
            }).set(p, {
                clipPath: u.c[c]
            }), a.forEach((function(e) {
                d.includes(e) || m.includes(e) ? t.to(e, {
                    clipPath: u.x.to
                }) : f.includes(e) ? t.to(e, {
                    clipPath: u.c.to[l].st1
                }).to(e, {
                    clipPath: u.c.to[l].st2
                }).to(e, {
                    clipPath: u.c.to[l].st3
                }) : p.includes(e) && t.to(e, {
                    clipPath: u.c.to[c].st1
                }).to(e, {
                    clipPath: u.c.to[c].st2
                }).to(e, {
                    clipPath: u.c.to[c].st3
                })
            })), n.add(t)
        }
        i.length && (o = gsap.timeline(), i.forEach((function(e) {
            o.from(e, {
                autoAlpha: 0
            }).from(e, {
                scale: .2
            }, "<")
        })), n.add(o, "< +=0.5"))
    }
    var r = document.getElementById("testimonials");
    var i = document.querySelector(".ajaxLoader"),
        a = new Proxy([], {
            set: function(e, t, o) {
                return e[t] = o, c(), !0
            },
            deleteProperty: function(e, t) {
                return delete e[t], c(), !0
            }
        });

    function s() {
        a.push(!0)
    }

    function l() {
        a.pop()
    }

    function c() {
        i.style.display = a.some((function(e) {
            return !0 === e
        })) ? "block" : "none"
    }
    var u = document.querySelector(".notifications");

    function d(e) {
        var t = e.id,
            o = e.type,
            n = e.msg,
            r = e.autoHide;
        if (u) {
            var i = u.children.length,
                a = t || "notify_".concat(Date.now()).concat(i),
                s = function() {
                    u.insertAdjacentHTML("beforeend", '<li id="'.concat(a, '" class="notifications__item notify-enter ').concat(o, '">\n      <div class="notifications__icon"></div>\n      <span class="notifications__text">').concat(n, '</span>\n      <button class="notifications__dismiss"></button>\n    </li>'))
                };
            t ? !u.querySelector("#".concat(t)) && s() : s(), r && f(document.getElementById(a), 5e3)
        }
    }

    function m(e) {
        var t = u.querySelector("#".concat(e));
        t && f(t)
    }

    function f(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        e.classList.remove("notify-enter"), setTimeout((function() {
            return e.classList.add("notify-leave")
        }), t), e.addEventListener("animationend", (function() {
            return e.remove()
        }))
    }

    function p() {
        var e, t, o, n = document.querySelector(".contact-section .contact__form"),
            r = n.querySelector('input[name="name"]'),
            i = n.querySelector('input[name="email"]'),
            a = n.querySelector('input[name="phone"]'),
            c = n.querySelector('textarea[name="message"]'),
            u = {
                name: {
                    required: !0,
                    minLength: !0
                },
                email: {
                    required: !0,
                    invalid: !0
                },
                phone: {
                    invalid: !0
                },
                message: {
                    required: !0
                }
            };
        "" === r.value ? (u.name.required = !0, d({
            id: "nameRequired",
            type: "danger",
            msg: r.closest(".control").querySelector(".errors-msgs .required").value
        })) : (u.name.required = !1, m("nameRequired")), r.value.length > 0 && r.value.length < r.getAttribute("minlength") ? (u.name.minLength = !0, d({
            id: "nameMinLength",
            type: "danger",
            msg: r.closest(".control").querySelector(".errors-msgs .minLength").value
        })) : (u.name.minLength = !1, m("nameMinLength")), Object.keys(u.name).some((function(e) {
            return !0 === u.name[e]
        })) ? (r.classList.remove("valid"), r.classList.add("invalid")) : (r.classList.remove("invalid"), r.classList.add("valid")), "" === i.value ? (u.email.required = !0, d({
            id: "emailRequired",
            type: "danger",
            msg: i.closest(".control").querySelector(".errors-msgs .required").value
        })) : (u.email.required = !1, m("emailRequired")), i.value.length > 0 && !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(i.value) ? (u.email.invalid = !0, d({
            id: "emailInvalid",
            type: "danger",
            msg: i.closest(".control").querySelector(".errors-msgs .invalid").value
        })) : (u.email.invalid = !1, m("emailInvalid")), Object.keys(u.email).some((function(e) {
            return !0 === u.email[e]
        })) ? (i.classList.remove("valid"), i.classList.add("invalid")) : (i.classList.remove("invalid"), i.classList.add("valid")), a.value.length > 0 && !/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im.test(a.value) ? (u.phone.invalid = !0, d({
            id: "phoneInvalid",
            type: "danger",
            msg: a.closest(".control").querySelector(".errors-msgs .invalid").value
        })) : (u.phone.invalid = !1, m("phoneInvalid")), Object.keys(u.phone).some((function(e) {
            return !0 === u.phone[e]
        })) ? (a.classList.remove("valid"), a.classList.add("invalid")) : (a.classList.remove("invalid"), a.classList.add("valid")), "" === c.value ? (u.message.required = !0, d({
            id: "messageRequired",
            type: "danger",
            msg: c.closest(".control").querySelector(".errors-msgs .required").value
        })) : (u.message.required = !1, m("messageRequired")), Object.keys(u.message).some((function(e) {
            return !0 === u.message[e]
        })) ? (c.classList.remove("valid"), c.classList.add("invalid")) : (c.classList.remove("invalid"), c.classList.add("valid")), !Object.values(u).some((function(e) {
            return Object.values(e).some(Boolean)
        })) && (t = (e = n).dataset.url, o = new FormData(e), s(), fetch(t, {
            method: "POST",
            body: o
        }).then((function(e) {
            return e.text()
        })).then((function(t) {
            "success" === t ? (d({
                type: "success",
                msg: e.dataset.successMsg
            }), e.reset(), e.querySelectorAll(".valid").forEach((function(e) {
                return e.classList.remove("valid")
            }))) : "error" === t && d({
                type: "danger",
                msg: e.dataset.errMsg
            }), l(), console.log(t)
        })).catch((function(e) {
            return console.log(e)
        })))
    }

    function g() {
        var e;
        gsap.registerPlugin(ScrollTrigger),
            function() {
                var e = document.querySelector(".scroll-to-top");
                if (e) {
                    var t = e.dataset.showAt,
                        o = e.querySelector("path"),
                        n = o.getTotalLength();
                    gsap.from(e, {
                        ease: "none",
                        duration: .3,
                        autoAlpha: 0,
                        y: 10,
                        scrollTrigger: {
                            trigger: "#app-inner",
                            start: "".concat(t, "px top"),
                            end: "bottom bottom",
                            toggleActions: "play none none reverse"
                        }
                    }), gsap.set(o, {
                        strokeDasharray: n,
                        strokeDashoffset: n,
                        scrollTrigger: {
                            trigger: "#app-inner",
                            start: "".concat(t, "px top"),
                            end: "bottom bottom",
                            onUpdate: function(e) {
                                return o.style.strokeDashoffset = n - e.progress * n
                            }
                        }
                    })
                }
            }(),
            function() {
                var e = gsap.utils.toArray(".stats-section .stats__item");
                if (e.length) {
                    var t = gsap.timeline({
                        scrollTrigger: {
                            trigger: ".stats__items",
                            start: "top 82%",
                            end: "top 50%",
                            scrub: .3
                        }
                    });
                    e.forEach((function(e, o) {
                        var n = 0 === o ? "" : "< +=0.2";
                        t.from(e, {
                            autoAlpha: 0
                        }, n).from(e, {
                            y: 50
                        }, "<")
                    }))
                }
            }(),
            function() {
                var e = gsap.utils.toArray(".text-box-inline");
                if (!e.length) return;
                e.forEach((function(e) {
                    gsap.timeline({
                        scrollTrigger: {
                            trigger: e,
                            start: "top 85%",
                            end: "top 35%",
                            scrub: .3
                        }
                    }).from(e.querySelector(".subtitle"), {
                        autoAlpha: 0,
                        top: 50
                    }).from(e.querySelector("h2"), {
                        autoAlpha: 0,
                        y: 50
                    }, "-=0.2").from(e.querySelectorAll("h2 ~ *"), {
                        autoAlpha: 0,
                        y: 50,
                        stagger: .2
                    }, "-=0.2")
                }))
            }(), document.querySelector(".about-section") && gsap.timeline({
                scrollTrigger: {
                    trigger: ".about-section .about__imgWrapper",
                    start: "top 80%",
                    end: "top 50%",
                    scrub: .3
                }
            }).from(".about-section .about__imgWrapper", {
                autoAlpha: 0,
                scale: .5
            }), (e = gsap.utils.toArray(".skills-section .skills__items")).length && e.forEach((function(e) {
                var t = gsap.timeline({
                    scrollTrigger: {
                        trigger: ".skills-section .skills__wrapper",
                        start: "top 85%",
                        end: "top 35%",
                        scrub: .3
                    }
                });
                e.querySelectorAll("li").forEach((function(e, o) {
                    var n = 0 === o ? "" : "< +=0.2";
                    t.from(e, {
                        autoAlpha: 0
                    }, n).from(e, {
                        y: 50
                    }, "<")
                }))
            })), n(), r && gsap.timeline({
                scrollTrigger: {
                    trigger: ".testimonials-section .section-title",
                    start: "top 90%",
                    end: "top 40%",
                    scrub: .3
                }
            }).from(".testimonials-section .section-title .subtitle", {
                autoAlpha: 0,
                top: 50
            }).from(".testimonials-section .section-title .title", {
                autoAlpha: 0,
                y: 50
            }, "< +=0.2"),
            function() {
                if (r) {
                    var e = gsap.utils.toArray(".testimonials-section .testimonials__item"),
                        t = gsap.timeline({
                            scrollTrigger: {
                                trigger: ".testimonials-section .testimonials__items",
                                start: "top 75%",
                                end: "top 25%",
                                scrub: .3
                            }
                        });
                    e.forEach((function(e, o) {
                        var n = 0 === o ? "" : "< +=0.2";
                        t.from(e, {
                            autoAlpha: 0
                        }, n).from(e, {
                            scale: .2
                        }, "<")
                    }))
                }
            }(),
            function() {
                var e = gsap.utils.toArray(".contact-section .contact__info__item");
                if (e.length) {
                    var t = gsap.timeline({
                        scrollTrigger: {
                            trigger: ".contact-section .contact__info",
                            start: "top 80%",
                            end: "top 55%",
                            scrub: .3
                        }
                    });
                    e.forEach((function(e, o) {
                        var n = 0 === o ? "" : "< +=0.2";
                        t.from(e, {
                            autoAlpha: 0
                        }, n).from(e, {
                            y: 50
                        }, "<")
                    })), t.from(".contact-section .contact__social__item", {
                        autoAlpha: 0
                    }).from(".contact-section .contact__social__item", {
                        y: 50,
                        stagger: .2
                    }, "<")
                }
            }(), document.querySelector(".contact-section .contact__form") && gsap.timeline({
                scrollTrigger: {
                    trigger: ".contact-section .contact__form",
                    start: "top 80%",
                    end: "top 50%",
                    scrub: .3
                }
            }).from(".contact-section .contact__form", {
                autoAlpha: 0,
                scale: .7
            })
    }
    u.addEventListener("click", (function(e) {
        var t;
        null !== (t = e.target) && void 0 !== t && t.classList.contains("notifications__dismiss") && f(e.target.parentElement)
    }));
    var y = 0;

    function v() {
        var e = document.querySelector(".header");
        if (e) {
            var t = window.pageYOffset,
                o = !(t >= 100),
                n = t > 100 && t > y;
            o ? e.classList.add("header--expanded") : e.classList.remove("header--expanded"), o ? e.classList.remove("header--semi-minimized") : e.classList.add("header--semi-minimized"), n ? e.classList.add("header--minimized") : e.classList.remove("header--minimized"), y = t
        }
    }
    var h = document.querySelector(".modeSwitcherBtn");

    function _() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "light";
        document.documentElement.dataset.mode = e, h && (h.dataset.mode = e), localStorage.setItem("nafieSavedMode", e)
    }

    function b() {
        h && _("light" === h.dataset.mode ? "dark" : "light")
    }
    var A = document.querySelector(".header .navbar"),
        q = document.querySelector(".header .hamburgerBtn");

    function L() {
        A.classList.contains("menu-open") ? S() : (A.classList.add("menu-open"), q.classList.add("open"), document.body.style.setProperty("overflow-y", "hidden"), A.querySelector(".offCanvasMenu").focus())
    }

    function S() {
        A.classList.remove("menu-open"), q.classList.remove("open"), document.body.style.removeProperty("overflow-y"), q.focus()
    }
    
    var w = document.querySelector(".portfolio-section .portfolio__items"),
        E = null == w ? void 0 : w.querySelectorAll(".portfolio__item");

    function x() {
        w && VanillaTilt.init(w.querySelectorAll(".portfolio__item"), {
            max: 8,
            speed: 400,
            glare: !0,
            "max-glare": .3
        })
    }

    function k(t) {
        var o = w.querySelectorAll(".portfolio__filters__btn"),
            n = t.textContent.toLowerCase();
        o.forEach((function(e) {
            return e === t ? e.classList.add("active") : e.classList.remove("active")
        })), e(w.querySelectorAll(".portfolio__item:not([hidden])")).filter((function(e) {
            e.style.setProperty("display", "none"), e.dataset.filter !== n && "all" !== n || setTimeout((function() {
                return e.style.removeProperty("display")
            }))
        })), T()
    }

    function P(t) {
        var o = t.dataset.noWorksMsg;
        s();
        var n = w.querySelectorAll(".portfolio__item[hidden]");
        n.length ? (e(n).slice(0, 7).forEach((function(e) {
            return e.removeAttribute("hidden")
        })), T()) : d({
            type: "danger",
            msg: o,
            autoHide: !0
        }), l()
    }

    function T() {
        x(), setTimeout((function() {
            return ScrollTrigger.refresh()
        }), 500)
    }
    document.addEventListener("DOMContentLoaded", (function() {
        var t, n, r, i, a, s, l, c, u, d, m, f;
        ! function() {
            var t = 0,
                o = document.querySelector(".preloader");
            if (o) {
                var n = o.querySelector(".preloader__content"),
                    r = e(document.images),
                    i = r.length,
                    a = function() {
                        o.setAttribute("style", "--loading-percentage: 100%"), gsap.timeline().set(".hide-in-preloading", {
                            autoAlpha: 1
                        }).to(n, {
                            delay: .5,
                            autoAlpha: 0
                        }).to(o, {
                            y: "-100%",
                            duration: 1,
                            ease: "expo.in"
                        }, "-=0.5").set(o, {
                            autoAlpha: 0
                        })
                    },
                    s = function() {
                        t++;
                        var e = 100 / i * t << 0;
                        o.setAttribute("style", "--loading-percentage: ".concat(e, "%")), t === i && a()
                    };
                i ? r.forEach((function(e) {
                    var t = new Image;
                    t.onload = s, t.onerror = s, t.src = e.src
                })) : a()
            }
        }(), window.innerWidth >= 992 && (t = document.getElementById("app-inner"), n = document.querySelector(".circle-cursor-outer"), r = document.querySelector(".circle-cursor-inner"), n && r && (t.addEventListener("mousemove", (function(e) {
            n.setAttribute("style", "visibility: visible; top: ".concat(e.clientY, "px; left: ").concat(e.clientX, "px;")), r.setAttribute("style", "visibility: visible; top: ".concat(e.clientY, "px; left: ").concat(e.clientX, "px;")), e.target.closest("a") || e.target.closest("button") || e.target.closest(".link-hover") ? r.classList.add("cursor-link-hover") : r.classList.remove("cursor-link-hover")
        })), t.addEventListener("click", (function() {
            r.classList.add("cursor-click-effect"), setTimeout((function() {
                return r.classList.remove("cursor-click-effect")
            }), 200)
        }))), function() {
            var e = document.getElementById("hero");
            if (e && e.dataset.hasOwnProperty("panEffect")) {
                var t = e.querySelectorAll(".hero__imgLayer");
                e.addEventListener("mousemove", (function(o) {
                    var n = (o.x - e.getBoundingClientRect().x) / e.offsetWidth * 100,
                        r = (o.y - e.getBoundingClientRect().y) / e.offsetHeight * 100;
                    t[0].setAttribute("style", "transform-origin: ".concat(n, "vw ").concat(r, "vh;")), t[1].setAttribute("style", "transform-origin: ".concat(n, "vw ").concat(r, "vh;"))
                }))
            }
        }(), x()), i = document.getElementById("app-inner"), a = i.classList, i.addEventListener("click", (function() {
            return a.remove("enable-focus-style")
        })), i.addEventListener("keyup", (function(e) {
            return "Tab" === e.key && a.add("enable-focus-style")
        })), v(), (s = localStorage.getItem("nafieSavedMode")) ? _(s) : window.matchMedia ? window.matchMedia("(prefers-color-scheme: dark)").matches ? _("dark") : _("light") : _(), window._toggleAppMode = b, window._offCanvasMenuToggle = L, window._offCanvasMenuClose = S, document.addEventListener("keyup", (function(t) {
            if (A.classList.contains("menu-open")) {
                var o = e(A.querySelectorAll('a[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex="0"]')).filter((function(e) {
                    return "hidden" !== window.getComputedStyle(e).getPropertyValue("visibility")
                }));
                l = o[0], c = o[o.length - 1], "Tab" === t.code ? t.shiftKey ? u && c.focus() : d && l.focus() : "Escape" === t.code && L();
                var n = document.activeElement;
                d = n === c, u = n === l
            }
        })), window._scrollToTop = o, new GLightbox({
            autoplayVideos: !1
        }), document.querySelectorAll("[data-tooltip]").forEach((function(e) {
            var t = JSON.parse(e.dataset.tooltip);
            e.classList.add("has-tooltip"), e.insertAdjacentHTML("beforeend", '<div class="simple-tooltip tooltip-'.concat(t.dir, '">').concat(t.text, "</div>"))
        })), document.querySelectorAll(".has-ultimate-tooltip").forEach((function(e) {
            Popper.createPopper(e, e.querySelector(".ultimate-tooltip"), {
                placement: "top",
                modifiers: [{
                    name: "offset",
                    options: {
                        offset: [0, 30]
                    }
                }]
            })
        })), document.querySelectorAll("[data-stagger-delay]").forEach((function(t) {
            var o = JSON.parse(t.dataset.staggerDelay);
            e(t.children).forEach((function(e, t) {
                e.style.setProperty("animation-delay", "".concat((t + 1) * (o || 100), "ms"))
            }))
        })), m = document.querySelectorAll('.skills-section .skills__text__switcher input[name="items_type"]'), f = document.querySelectorAll(".skills-section .skills__wrapper .skills__items"), m.forEach((function(e) {
            e.addEventListener("change", (function(e) {
                f.forEach((function(t) {
                    t.dataset.type === e.target.value ? t.style.removeProperty("display") : t.style.setProperty("display", "none")
                }))
            }))
        })), window._filterPortfolioItems = k, window._loadMorePortfolioItems = P, w && e(E).slice(7).forEach((function(e) {
            e.setAttribute("hidden", "")
        })), window._contactFormValidation = p
    })), window.addEventListener("load", (function() {
        g()
    })), window.addEventListener("scroll", (function() {
        v()
    }))
}();